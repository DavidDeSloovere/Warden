@using System.Threading.Tasks
@using Warden.Web.ViewModels
@model Warden.Web.ViewModels.WardenIterationViewModel

<div class="row card-panel">
    <div class="col s12">
        <h5 class="custom-text">Iteration for @Model.Iteration.Results.Count() watchers by @Model.Iteration.WardenName</h5>
    </div>
    <div class="col s12">
        <label>Completed at</label>
        <ul class="collection">
            <li class="collection-item">@Model.Iteration.CompletedAt</li>
        </ul>
    </div>
    <div class="col s12">
        <label>Id</label>
        <ul class="collection">
            <li class="collection-item">@Model.Iteration.Id</li>
        </ul>
    </div>
    <div class="col s12">
        <label>Is valid</label>
        <ul class="collection">
            <li class="collection-item">
                @Model.Iteration.IsValid
                @if (Model.Iteration.IsValid)
                {
                    <i class="material-icons green-text lighten-2 right">thumb_up</i>
                }
                else
                {
                    <i class="material-icons red-text lighten-2 right">thumb_down</i>
                }
            </li>
        </ul>
    </div>
    <div class="col s12">
        <label>Valid checks</label>
        <ul class="collection">
            <li class="collection-item">@Model.Iteration.Results.Count(x => x.IsValid)</li>
        </ul>
    </div>
    <div class="col s12">
        <label>Invalid checks</label>
        <ul class="collection">
            <li class="collection-item">@Model.Iteration.Results.Count(x => !x.IsValid)</li>
        </ul>
    </div>
</div>
@foreach (var result in Model.Iteration.Results.OrderBy(x => x.WatcherCheckResult.WatcherName))
{
    var watcherName = result.WatcherCheckResult.WatcherName;
    <div class="row card-panel">
        <div class="col s12">
            <label>Watcher name</label>
            <div class="collection">
                <a href="@Url.Action("Details", "Watcher", new {organizationId = Model.OrganizationId, wardenId = Model.WardenId, watcherName})" class="collection-item" name="watcher-@watcherName">
                    <span class="custom-text">@watcherName</span>
                </a>
            </div>
            <label>Watcher type</label>
            <ul class="collection">
                <li class="collection-item">@result.WatcherCheckResult.WatcherType</li>
            </ul>
            <label>Is valid</label>
            <ul class="collection">
                <li class="collection-item">
                    @result.WatcherCheckResult.IsValid
                    @if (result.WatcherCheckResult.IsValid)
                    {
                        <i class="material-icons green-text lighten-2 right">thumb_up</i>
                    }
                    else
                    {
                        <i class="material-icons red-text lighten-2 right">thumb_down</i>
                    }
                </li>
            </ul>
            <label>Description</label>
            <ul class="collection">
                <li class="collection-item">@result.WatcherCheckResult.Description</li>
            </ul>
            <label>Completed at</label>
            <ul class="collection">
                <li class="collection-item">@result.CompletedAt</li>
            </ul>
            <label>Exception</label>
            @if (result.Exception == null)
            {
                <ul class="collection">
                    <li class="collection-item">---</li>
                </ul>
            }
            else
            {
                <ul class="collection collapsible" data-collapsible="expandable">
                    <li class="collection-item">
                        <div class="collapsible-header">
                            <i class="material-icons">info_outline</i>Expand
                        </div>
                        <div class="collapsible-body text-black"> @Html.Partial("_Exception", result.Exception)</div>
                    </li>
                </ul>
            }
        </div>
    </div>
}


